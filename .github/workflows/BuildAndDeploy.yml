name: Deploy On Azure ðŸš€

on: 
    workflow_dispatch:
    push:
        branches:
            - ReleaseCIDI


env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
    publish:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup DotNet
                uses: actions/setup-dotnet@v3
                with:
                    dotnet-version: '6.0.x'

            - name: Restore
                run: dotnet restore ./PasswordManagement.sln
            
            - name: Build
                run: dotnet build ./PasswordManagement.sln --configuration Release --no-restore
            
            - name: Publish
                run: dotnet publish ./PasswordManagement.sln --configuration Release --no-build

#   build:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v2

#     - name: Add MSBuild to PATH
#       uses: microsoft/setup-msbuild@v1.0.2

#     - name: Restore NuGet packages
#       working-directory: ${{env.GITHUB_WORKSPACE}}
#       run: nuget restore ${{env.SOLUTION_FILE_PATH}}

#     - name: Build
#       working-directory: ${{env.GITHUB_WORKSPACE}}
#       # Add additional options to the MSBuild command line here (like platform or verbosity level).
#       # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
#       run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
